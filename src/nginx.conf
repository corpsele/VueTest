user root owner;
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       8080;
        server_name  localhost;

        #charset koi8-r;
        #添加头部信息
        proxy_set_header Cookie $http_cookie;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            if ($request_method = OPTIONS ) {
	          return 200;
            }
            add_header Access-Control-Allow-Origin http://rss.rrys.tv;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, token";
            add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
            add_header Access-Control-Expose-Headers "token";
            add_header Access-Control-Allow-Credentials true;

        #access_log  logs/host.access.log  main;

        location ^~ /api/ {
            # try_files $uri $uri/ /index.html;
            proxy_pass http://rss.rrys.tv;
            #         # 把 /api 路径下的请求转发给真正的后端服务器
            # # 把host头传过去，后端服务程序将收到your.domain.name, 否则收到的是localhost:8080
            # proxy_set_header Host $host;

            # # 把cookie中的path部分从/api替换成/service
            # proxy_cookie_path /api /;

            # # 把cookie的path部分从localhost:8080替换成your.domain.name
            # proxy_cookie_domain http://localhost:8080 http://rss.rrys.tv;
            rewrite  ^.+api/?(.*)$ /$1 break;
        }

        location ^*/api/ {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            proxy_set_header 'Access-Control-Allow-Origin' '*';
            proxy_set_header 'Access-Control-Allow-Credentials' 'true';
            proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            proxy_set_header   Host             $host;
            proxy_set_header   x-forwarded-for  $remote_addr;
            proxy_set_header   X-Real-IP        $remote_addr;
            rewrite ^.+/api/(.*)$ /$1 break;
            try_files $uri $uri/ /index.html;
            proxy_pass http://rss.rrys.tv/;
        }

        location / {
            # proxy_pass http://rss.rrys.tv;
            root   /Users/eport/Documents/VueTest/dist;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # location / {
        #     root   html;
        #     index  index.html index.htm;
        # }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # if ($request_method = OPTIONS ) {
	    #    add_header Access-Control-Allow-Origin "*";
	    #    add_header Access-Control-Allow-Methods "*";
	    #    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, token";
	    #    add_header Access-Control-Allow-Credentials "true";
	    #    add_header Access-Control-Max-Age "3600";
	    #    add_header Access-Control-Expose-Headers "token";
	    #    add_header Content-Length 0;
	    #    add_header Content-Type text/plain;
	    #    return 200;
        # }
        # add_header Access-Control-Allow-Origin *;
        # add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, token";
        # add_header Access-Control-Allow-Methods *;
        # add_header Access-Control-Expose-Headers "token";

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    include servers/*;
}
